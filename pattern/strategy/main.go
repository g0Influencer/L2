package strategy


/*
	Стратегия — это поведенческий паттерн, выносит набор алгоритмов в собственные классы и делает их взаимозаменимыми
		Другие объекты содержат ссылку на объект-стратегию и делегируют ей работу.
		Программа может подменить этот объект другим, если требуется иной способ решения задачи.

	Применимость:
		- Когда нужно использовать разные вариации какого-то алгоритма внутри одного объекта.
		- Когда у насс есть множество похожих классов, отличающихся только некоторым поведением.
		- Когда мы не хотим обнажать детали реализации алгоритмов для других классов
		- Когда различные вариации алгоритмов реализованы в виде развесистого условного оператора.
   		  Каждая ветка такого оператора представляет собой вариацию алгоритма.
 */

// клиентский код
func main(){
	lfu := &lfu{}
	cache := initCache(lfu)

	cache.add("a", "1")
	cache.add("b", "2")

	cache.add("c", "3")

	lru := &lru{}
	cache.setEvictionAlgo(lru)

	cache.add("d", "4")

	fifo := &fifo{}
	cache.setEvictionAlgo(fifo)

	cache.add("e", "5")
}